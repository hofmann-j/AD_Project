Illinois_data <-Illinois_data[,-2]
#Creation de deux dataset sur la Californie et le Texas
California_data <- subset(US_data, State == "California")
Texas_data <- subset(US_data, State == "Texas")
Illinois_data <- subset(US_data, State == 'Illinois')
#On enlève la variable State
California_data <-California_data[,-2]
Texas_data <-Texas_data[,-2]
Illinois_data <-Illinois_data[,-2]
Illinois_data <- read_csv("Illinois_data.csv")
write.csv(Illinois_data, "Illinois_data.csv", row.names = TRUE)
View(Illinois_data)
US_data <- read_csv("US_data.csv")
California_data <- read_csv("California_data.csv")
Texas_data <- read_csv("Texas_data.csv")
Illinois_data <- read_csv("Illinois_data")
library(ggplot2)
library(corrplot)
library(FactoMineR)
library(factoextra)
library(readr)
US_data <- read_csv("US_data.csv")
California_data <- read_csv("California_data.csv")
Texas_data <- read_csv("Texas_data.csv")
Illinois_data <- read_csv("Illinois_data.csv")
correlation_matrix <- cor(California_data[,-1], use = "complete.obs")
View(California_data)
#On garde uniquement les valeurs numériques
Texas_num  <- Texas_data[, -c(1, 2, ncol(Texas_data))]
correlation_matrix <- cor(California_data[,-1], use = "complete.obs")
#On garde uniquement les valeurs numériques
Texas_num  <- Texas_data[, -c(1, 2, ncol(Texas_data))]
correlation_matrix <- cor(Texas_num, use = "complete.obs")
print(correlation_matrix)
View(Illinois_data)
View(Texas_num)
View(Texas_data)
#On garde uniquement les valeurs numériques
Texas_num  <- Texas_data[,c(3:34)]
correlation_matrix <- cor(Texas_num, use = "complete.obs")
print(correlation_matrix)
#On garde uniquement les valeurs numériques
Texas_num  <- Texas_data[,c(3:34)]
m_corr = cor(data_num,use="complete.obs")
m_corr = cor(Texas_num,use="complete.obs")
#On garde uniquement les valeurs numériques
Texas_num  <- Texas_data[,c(3:34)]
m_corr = cor(Texas_num,use="complete.obs")
corrplot(m_corr,method="ellipse", order="hclust",tl.col="blue",tl.srt=55,
addCoef.col ="black", cl.cex=1.0, addCoefasPercent = TRUE, number.cex = 0.6)
#On garde uniquement les valeurs numériques
Texas_num  <- Texas_data[,c(3:34)]
m_corr = cor(Texas_num,use="complete.obs")
corrplot(m_corr,method="ellipse", order="hclust",tl.col="blue",tl.srt=55,
addCoef.col ="black", cl.cex=1.0, addCoefasPercent = TRUE, number.cex = 0.6,
tl.cex = 0.3)
#On garde uniquement les valeurs numériques
Texas_num  <- Texas_data[,c(3:34)]
par(cex.main=1.5, cex.lab=1.5, cex.axis=1.2)
m_corr = cor(Texas_num,use="complete.obs")
corrplot(m_corr,method="ellipse", order="hclust",tl.col="blue",tl.srt=55,
addCoef.col ="black", cl.cex=1.0, addCoefasPercent = TRUE, number.cex = 0.6,
tl.cex = 0.3)
#On garde uniquement les valeurs numériques
Texas_num  <- Texas_data[,c(3:34)]
par(cex.main=2, cex.lab=2, cex.axis=2)
m_corr = cor(Texas_num,use="complete.obs")
corrplot(m_corr,method="ellipse", order="hclust",tl.col="blue",tl.srt=55,
addCoef.col ="black", cl.cex=1.0, addCoefasPercent = TRUE, number.cex = 0.6,
tl.cex = 0.3, type = "upper")
acp <- PCA(Texas_num, scale.unit = TRUE, graph = FALSE, quali.sup = FALSE,
quanti.sup = FALSE, ncp = 7)
View(Texas_num)
acp <- PCA(Texas_num)
acp <- PCA(Texas_num, scale.unit = TRUE)
acp <- PCA(Texas_num, scale.unit = TRUE, graph = FALSE)
acp <- PCA(Texas_num, scale.unit = TRUE)
acp <- PCA(Texas_num, graph = FALSE, scale.unit = TRUE)
acp <- PCA(Texas_num, scale.unit = TRUE)
g1 <- fviz_eig(acp, addlabels = TRUE, ylim = c(0,40)
acp <- PCA(Texas_num, scale.unit = TRUE)
g1 <- fviz_eig(acp, addlabels = TRUE, ylim = c(0,40))
acp <- PCA(Texas_num, scale.unit = TRUE)
g1 <- fviz_eig(acp, addlabels = TRUE, ylim = c(0,40))
g2 <- ggplot(melt(acp$ind$coord), aes(x=Var2,y=value))+geom_boxplot()+xlab("")
library(ggplot2)
library(corrplot)
library(FactoMineR)
library(factoextra)
library(readr)
library(reshape2)
acp <- PCA(Texas_num, scale.unit = TRUE)
g1 <- fviz_eig(acp, addlabels = TRUE, ylim = c(0,40))
g2 <- ggplot(melt(acp$ind$coord), aes(x=Var2,y=value))+geom_boxplot()+xlab("")
grid.arrange(g1,g2,ncol=2)
library(ggplot2)
library(corrplot)
library(FactoMineR)
library(factoextra)
library(readr)
library(reshape2)
library(gridExtra)
acp <- PCA(Texas_num, scale.unit = TRUE)
g1 <- fviz_eig(acp, addlabels = TRUE, ylim = c(0,40))
g2 <- ggplot(melt(acp$ind$coord), aes(x=Var2,y=value))+geom_boxplot()+xlab("")
grid.arrange(g1,g2,ncol=2)
library(ggplot2)
library(corrplot)
library(FactoMineR)
library(factoextra)
library(readr)
library(dplyr)
library(reshape2)
library(gridExtra)
colSums(is.na(US_data))  # Vérifie combien de NA par colonne
View(US_data)
# Vérifie combien de NA par colonne
colSums(is.na(US_data))
#On enlève la ligne avec
#US_data <- US_data[-2675,]
View(Texas_data)
# Vérifie combien de NA par colonne
colSums(is.na(US_data))
US_data[2675,18] <- 97491
library(ggplot2)
library(corrplot)
library(FactoMineR)
library(factoextra)
library(readr)
library(dplyr)
library(reshape2)
library(gridExtra)
#Lecture du dataset
#On enleve la premiere colonne car repetition
US_data <- read_csv("data.csv")
US_data <- US_data[,-1]
head(US_data)
# Supprimer le symbole "%" et convertir en numérique
US_data$`Less than 9th grade` <- as.numeric(sub("%", "", US_data$`Less than 9th grade`))
US_data$`HS graduate and eq` <- as.numeric(sub("%", "", US_data$`HS graduate and eq`))
US_data$`9th to 12th grade` <- as.numeric(sub("%", "", US_data$`9th to 12th grade`))
US_data$`Graduate or professional degree` <- as.numeric(sub("%", "", US_data$`Graduate or professional degree`))
US_data$`College,No Degree` <- as.numeric(sub("%", "", US_data$`College,No Degree`))
US_data$`Associates Degree` <- as.numeric(sub("%", "", US_data$`Associates Degree`))
US_data$`Bachelors Degree` <- as.numeric(sub("%", "", US_data$`Bachelors Degree`))
#Creation d'une variable "Party"
US_data$Party <- ifelse(US_data$`Democrat vote raw` > US_data$`Republican vote raw`, "Democrat", "Republican")
# Mettre les colonnes en facteur
US_data$State <- as.factor(US_data$State)
US_data$Party <- as.factor(US_data$Party)
head(US_data)
# Vérifie combien de NA par colonne
colSums(is.na(US_data))
#On remplace par une valeur trouvée sur internet
US_data[2675,18] <- 97491
#Creation de trois dataset sur la Californie, le Texas et l'Illinois
California_data <- subset(US_data, State == "California")
Texas_data <- subset(US_data, State == "Texas")
Illinois_data <- subset(US_data, State == 'Illinois')
#On enlève la variable State
California_data <-California_data[,-2]
Texas_data <-Texas_data[,-2]
Illinois_data <-Illinois_data[,-2]
#Creation de trois dataset sur la Californie, le Texas et l'Illinois
California_data <- subset(US_data, State == "California")
Texas_data <- subset(US_data, State == "Texas")
Illinois_data <- subset(US_data, State == 'Illinois')
#On enlève la variable State
California_data <-California_data[,-2]
Texas_data <-Texas_data[,-2]
Illinois_data <-Illinois_data[,-2]
write.csv(US_data, "US_data2.csv", row.names = TRUE)
write.csv(Texas_data, "Texas_data.csv", row.names = TRUE)
write.csv(California_data, "California_data.csv", row.names = TRUE)
write.csv(Illinois_data, "Illinois_data.csv", row.names = TRUE)
library(ggplot2)
library(corrplot)
library(FactoMineR)
library(factoextra)
library(readr)
library(reshape2)
library(gridExtra)
US_data <- read_csv("US_data2.csv")
California_data <- read_csv("California_data.csv")
Texas_data <- read_csv("Texas_data.csv")
Illinois_data <- read_csv("Illinois_data.csv")
#On garde uniquement les valeurs numériques
Texas_num  <- Texas_data[,c(3:34)]
par(cex.main=2, cex.lab=2, cex.axis=2)
m_corr = cor(Texas_num,use="complete.obs")
corrplot(m_corr,method="ellipse", order="hclust",tl.col="blue",tl.srt=55,
addCoef.col ="black", cl.cex=1.0, addCoefasPercent = TRUE, number.cex = 0.6,
tl.cex = 0.3, type = "upper")
acp <- PCA(Texas_num, scale.unit = TRUE, graph = FALSE)
g1 <- fviz_eig(acp, addlabels = TRUE, ylim = c(0,40))
g2 <- ggplot(melt(acp$ind$coord), aes(x=Var2,y=value))+geom_boxplot()+xlab("")
grid.arrange(g1,g2,ncol=2)
library(ggplot2)
library(corrplot)
library(FactoMineR)
library(factoextra)
library(readr)
library(dplyr)
library(reshape2)
library(gridExtra)
#Lecture du dataset
#On enleve la premiere colonne car repetition
US_data <- read_csv("data.csv")
US_data <- US_data[,-1]
head(US_data)
# Supprimer le symbole "%" et convertir en numérique
US_data$`Less than 9th grade` <- as.numeric(sub("%", "", US_data$`Less than 9th grade`))
US_data$`HS graduate and eq` <- as.numeric(sub("%", "", US_data$`HS graduate and eq`))
US_data$`9th to 12th grade` <- as.numeric(sub("%", "", US_data$`9th to 12th grade`))
US_data$`Graduate or professional degree` <- as.numeric(sub("%", "", US_data$`Graduate or professional degree`))
US_data$`College,No Degree` <- as.numeric(sub("%", "", US_data$`College,No Degree`))
US_data$`Associates Degree` <- as.numeric(sub("%", "", US_data$`Associates Degree`))
US_data$`Bachelors Degree` <- as.numeric(sub("%", "", US_data$`Bachelors Degree`))
#Creation d'une variable "Party"
US_data$Party <- ifelse(US_data$`Democrat vote raw` > US_data$`Republican vote raw`, "Democrat", "Republican")
# Mettre les colonnes en facteur
US_data$State <- as.factor(US_data$State)
US_data$Party <- as.factor(US_data$Party)
head(US_data)
# Vérifie combien de NA par colonne
colSums(is.na(US_data))
#On remplace par une valeur trouvée sur internet
US_data[2675,18] <- 97491
#Creation de trois dataset sur la Californie, le Texas et l'Illinois
California_data <- subset(US_data, State == "California")
Texas_data <- subset(US_data, State == "Texas")
Illinois_data <- subset(US_data, State == 'Illinois')
#On enlève la variable State
California_data <-California_data[,-2]
Texas_data <-Texas_data[,-2]
Illinois_data <-Illinois_data[,-2]
View(US_data)
# Calculer la moyenne des variables quantitatives par État
State_data <- US_data %>%
group_by(State) %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
# Afficher le dataset résultant
head(State_data)
# Calculer la moyenne des variables quantitatives par État
State_data <- US_data %>%
group_by(State) %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
#On recalcule la variable Party
State_data$Party <- ifelse(State_data$`Democrat vote raw` > State_data$`Republican vote raw`, "Democrat", "Republican")
State_data$Party <- as.factor(US_data$Party)
# Calculer la moyenne des variables quantitatives par État
State_data <- US_data %>%
group_by(State) %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
#On recalcule la variable Party
State_data$Party <- ifelse(State_data$`Democrat vote raw` > State_data$`Republican vote raw`, "Democrat", "Republican")
State_data$Party <- as.factor(State_data$Party)
# Afficher le dataset résultant
head(State_data)
View(State_data)
# Multiplier Value1 et Value2 par la valeur de la colonne Multiplier
State_data <- US_data %>%
mutate(
'Less than 9th grade' = 'Less than 9th grade' * 'Total pop'
)
# Multiplier Value1 et Value2 par la valeur de la colonne Multiplier
State_data <- US_data %>%
mutate(
`Less than 9th grade` = `Less than 9th grade` * `Total pop`
)
# Multiplier Value1 et Value2 par la valeur de la colonne Multiplier
State_data <- US_data %>%
mutate(
`Less than 9th grade` = `Less than 9th grade` * `Total Pop`
)
# Afficher les premières lignes du dataset modifié
head(US_data)
# Multiplier Value1 et Value2 par la valeur de la colonne Multiplier
State_data <- US_data %>%
mutate(
`Less than 9th grade` = `Less than 9th grade` * `Total Pop`
`9th to 12th grade` = `9th to 12th grade` * `Total Pop`
# Multiplier Value1 et Value2 par la valeur de la colonne Multiplier
State_data <- US_data %>%
mutate(
`Less than 9th grade` = `Less than 9th grade` * `Total Pop`,
`9th to 12th grade` = `9th to 12th grade` * `Total Pop`,
`HS graduate and eq` = `HS graduate and eq` * `Total Pop`,
`College,No Degree` = `College,No Degree` * `Total Pop`,
`Associates Degree` = `Associates Degree` * `Total Pop`,
`Bachelors Degree` = `Bachelors Degree` * `Total Pop`,
`Associates Degree` = `Associates Degree` * `Total Pop`,
`Graduate or professional degree` = `Graduate or professional degree` * `Total Pop`,
`Gini Index` = `Gini Index` * `Total Pop`,
`Median income` = `Median income` * `Total Pop`,
`Density` = `Density` * `Total Pop`,
`Mean income` = `Mean income` * `Area`,
`Hispanic or Latino %` = `Hispanic or Latino %` * `Total Pop`,
`NH-White %` = `NH-White %` * `Total Pop`,
`NH-Black %` = `NH-Black %` * `Total Pop`,
`NH-American Native %` = `NH-American Native %` * `Total Pop`,
`NH-Black %` = `NH-Black %` * `Total Pop`,
`NH-Asian %` = `NH-Asian %` * `Total Pop`,
`NH-Native Pacific Islander %` = `NH-Native Pacific Islander %` * `Total Pop`,
`NH-Other Race %` = `NH-Other Race %` * `Total Pop`,
`NH-Two or More Races %` = `NH-Two or More Races %` * `Total Pop`,
`% in Management, business, science, and arts` = `% in Management, business, science, and arts` * `Total Pop`,
`NH-Other Race %` = `NH-Other Race %` * `Total Pop`,
`% in Service` = `% in Service` * `Total Pop`,
`% in Sales and Office` = `% in Sales and Office` * `Total Pop`,
`% in Resources and Construction` = `% in Resources and Construction` * `Total Pop`,
`% in Transportation` = `% in Transportation` * `Total Pop`
)
# Afficher les premières lignes du dataset modifié
head(US_data)
View(State_data)
library(ggplot2)
library(corrplot)
library(FactoMineR)
library(factoextra)
library(readr)
library(dplyr)
library(reshape2)
library(gridExtra)
#Lecture du dataset
#On enleve la premiere colonne car repetition
US_data <- read_csv("data.csv")
US_data <- US_data[,-1]
head(US_data)
# Supprimer le symbole "%" et convertir en numérique
US_data$`Less than 9th grade` <- as.numeric(sub("%", "", US_data$`Less than 9th grade`))
US_data$`HS graduate and eq` <- as.numeric(sub("%", "", US_data$`HS graduate and eq`))
US_data$`9th to 12th grade` <- as.numeric(sub("%", "", US_data$`9th to 12th grade`))
US_data$`Graduate or professional degree` <- as.numeric(sub("%", "", US_data$`Graduate or professional degree`))
US_data$`College,No Degree` <- as.numeric(sub("%", "", US_data$`College,No Degree`))
US_data$`Associates Degree` <- as.numeric(sub("%", "", US_data$`Associates Degree`))
US_data$`Bachelors Degree` <- as.numeric(sub("%", "", US_data$`Bachelors Degree`))
#Creation d'une variable "Party"
US_data$Party <- ifelse(US_data$`Democrat vote raw` > US_data$`Republican vote raw`, "Democrat", "Republican")
# Mettre les colonnes en facteur
US_data$State <- as.factor(US_data$State)
US_data$Party <- as.factor(US_data$Party)
head(US_data)
# Vérifie combien de NA par colonne
colSums(is.na(US_data))
#On remplace par une valeur trouvée sur internet
US_data[2675,18] <- 97491
#Creation de trois dataset sur la Californie, le Texas et l'Illinois
California_data <- subset(US_data, State == "California")
Texas_data <- subset(US_data, State == "Texas")
Illinois_data <- subset(US_data, State == 'Illinois')
#On enlève la variable State
California_data <-California_data[,-2]
Texas_data <-Texas_data[,-2]
Illinois_data <-Illinois_data[,-2]
# Multiplier Value1 et Value2 par la valeur de la colonne Multiplier
State_data <- US_data %>%
mutate(
`Less than 9th grade` = `Less than 9th grade` * `Total Pop`,
`9th to 12th grade` = `9th to 12th grade` * `Total Pop`,
`HS graduate and eq` = `HS graduate and eq` * `Total Pop`,
`College,No Degree` = `College,No Degree` * `Total Pop`,
`Associates Degree` = `Associates Degree` * `Total Pop`,
`Bachelors Degree` = `Bachelors Degree` * `Total Pop`,
`Associates Degree` = `Associates Degree` * `Total Pop`,
`Graduate or professional degree` = `Graduate or professional degree` * `Total Pop`,
`Gini Index` = `Gini Index` * `Total Pop`,
`Median income` = `Median income` * `Total Pop`,
`Density` = `Density` * `Total Pop`,
`Mean income` = `Mean income` * `Area`,
`Hispanic or Latino %` = `Hispanic or Latino %` * `Total Pop`,
`NH-White %` = `NH-White %` * `Total Pop`,
`NH-Black %` = `NH-Black %` * `Total Pop`,
`NH-American Native %` = `NH-American Native %` * `Total Pop`,
`NH-Black %` = `NH-Black %` * `Total Pop`,
`NH-Asian %` = `NH-Asian %` * `Total Pop`,
`NH-Native Pacific Islander %` = `NH-Native Pacific Islander %` * `Total Pop`,
`NH-Other Race %` = `NH-Other Race %` * `Total Pop`,
`NH-Two or More Races %` = `NH-Two or More Races %` * `Total Pop`,
`% in Management, business, science, and arts` = `% in Management, business, science, and arts` * `Total Pop`,
`NH-Other Race %` = `NH-Other Race %` * `Total Pop`,
`% in Service` = `% in Service` * `Total Pop`,
`% in Sales and Office` = `% in Sales and Office` * `Total Pop`,
`% in Resources and Construction` = `% in Resources and Construction` * `Total Pop`,
`% in Transportation` = `% in Transportation` * `Total Pop`
)
# Afficher les premières lignes du dataset modifié
head(US_data)
View(US_data)
View(State_data)
# Calculer la moyenne des variables quantitatives par État
State_data <- US_data %>%
group_by(State) %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
State_data <- State_data %>%
mutate(
`Less than 9th grade` = `Less than 9th grade` / `Total Pop`,
`9th to 12th grade` = `9th to 12th grade` / `Total Pop`,
`HS graduate and eq` = `HS graduate and eq` / `Total Pop`,
`College,No Degree` = `College,No Degree` / `Total Pop`,
`Associates Degree` = `Associates Degree` / `Total Pop`,
`Bachelors Degree` = `Bachelors Degree` / `Total Pop`,
`Associates Degree` = `Associates Degree` / `Total Pop`,
`Graduate or professional degree` = `Graduate or professional degree` / `Total Pop`,
`Gini Index` = `Gini Index` / `Total Pop`,
`Median income` = `Median income` / `Total Pop`,
`Density` = `Density` / `Total Pop`,
`Mean income` = `Mean income` / `Area`,
`Hispanic or Latino %` = `Hispanic or Latino %` / `Total Pop`,
`NH-White %` = `NH-White %` / `Total Pop`,
`NH-Black %` = `NH-Black %` / `Total Pop`,
`NH-American Native %` = `NH-American Native %` / `Total Pop`,
`NH-Black %` = `NH-Black %` / `Total Pop`,
`NH-Asian %` = `NH-Asian %` / `Total Pop`,
`NH-Native Pacific Islander %` = `NH-Native Pacific Islander %` / `Total Pop`,
`NH-Other Race %` = `NH-Other Race %` / `Total Pop`,
`NH-Two or More Races %` = `NH-Two or More Races %` / `Total Pop`,
`% in Management, business, science, and arts` = `% in Management, business, science, and arts` / `Total Pop`,
`NH-Other Race %` = `NH-Other Race %` / `Total Pop`,
`% in Service` = `% in Service` / `Total Pop`,
`% in Sales and Office` = `% in Sales and Office` / `Total Pop`,
`% in Resources and Construction` = `% in Resources and Construction` / `Total Pop`,
`% in Transportation` = `% in Transportation` / `Total Pop`
)
# Afficher le dataset résultant
head(State_data)
# Calculer la somme pondérée et diviser par la population totale par Etat
State_data <- US_data %>%
group_by(State) %>%
summarise(
`Less than 9th grade` = sum(`Less than 9th grade weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`9th to 12th grade` = sum(`9th to 12th grade weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`HS graduate and eq` = sum(`HS graduate and eq weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`College,No Degree` = sum(`College,No Degree weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`Associates Degree` = sum(`Associates Degree weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`Bachelors Degree` = sum(`Bachelors Degree weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`Graduate or professional degree` = sum(`Graduate or professional degree weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`Gini Index` = sum(`Gini Index weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`Median income` = sum(`Median income weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`Density` = sum(`Density weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`Mean income` = sum(`Mean income weighted`, na.rm = TRUE) / sum(`Area`, na.rm = TRUE),
`Hispanic or Latino %` = sum(`Hispanic or Latino % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`NH-White %` = sum(`NH-White % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`NH-Black %` = sum(`NH-Black % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`NH-American Native %` = sum(`NH-American Native % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`NH-Asian %` = sum(`NH-Asian % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`NH-Native Pacific Islander %` = sum(`NH-Native Pacific Islander % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`NH-Other Race %` = sum(`NH-Other Race % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`NH-Two or More Races %` = sum(`NH-Two or More Races % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`% in Management, business, science, and arts` = sum(`% in Management, business, science, and arts weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`% in Service` = sum(`% in Service weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`% in Sales and Office` = sum(`% in Sales and Office weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`% in Resources and Construction` = sum(`% in Resources and Construction weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`% in Transportation` = sum(`% in Transportation weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE)
)
State_data <- US_data %>%
mutate(
# Multiplier chaque pourcentage par la population du comté
`Less than 9th grade weighted` = `Less than 9th grade` * `Total Pop`,
`9th to 12th grade weighted` = `9th to 12th grade` * `Total Pop`,
`HS graduate and eq weighted` = `HS graduate and eq` * `Total Pop`,
`College,No Degree weighted` = `College,No Degree` * `Total Pop`,
`Associates Degree weighted` = `Associates Degree` * `Total Pop`,
`Bachelors Degree weighted` = `Bachelors Degree` * `Total Pop`,
`Graduate or professional degree weighted` = `Graduate or professional degree` * `Total Pop`,
`Gini Index weighted` = `Gini Index` * `Total Pop`,
`Median income weighted` = `Median income` * `Total Pop`,
`Density weighted` = `Density` * `Total Pop`,
`Mean income weighted` = `Mean income` * `Area`,
`Hispanic or Latino % weighted` = `Hispanic or Latino %` * `Total Pop`,
`NH-White % weighted` = `NH-White %` * `Total Pop`,
`NH-Black % weighted` = `NH-Black %` * `Total Pop`,
`NH-American Native % weighted` = `NH-American Native %` * `Total Pop`,
`NH-Asian % weighted` = `NH-Asian %` * `Total Pop`,
`NH-Native Pacific Islander % weighted` = `NH-Native Pacific Islander %` * `Total Pop`,
`NH-Other Race % weighted` = `NH-Other Race %` * `Total Pop`,
`NH-Two or More Races % weighted` = `NH-Two or More Races %` * `Total Pop`,
`% in Management, business, science, and arts weighted` = `% in Management, business, science, and arts` * `Total Pop`,
`% in Service weighted` = `% in Service` * `Total Pop`,
`% in Sales and Office weighted` = `% in Sales and Office` * `Total Pop`,
`% in Resources and Construction weighted` = `% in Resources and Construction` * `Total Pop`,
`% in Transportation weighted` = `% in Transportation` * `Total Pop`
)
# Calculer la somme pondérée et diviser par la population totale par Etat
State_data <- US_data %>%
group_by(State) %>%
summarise(
`Less than 9th grade` = sum(`Less than 9th grade weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`9th to 12th grade` = sum(`9th to 12th grade weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`HS graduate and eq` = sum(`HS graduate and eq weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`College,No Degree` = sum(`College,No Degree weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`Associates Degree` = sum(`Associates Degree weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`Bachelors Degree` = sum(`Bachelors Degree weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`Graduate or professional degree` = sum(`Graduate or professional degree weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`Gini Index` = sum(`Gini Index weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`Median income` = sum(`Median income weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`Density` = sum(`Density weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`Mean income` = sum(`Mean income weighted`, na.rm = TRUE) / sum(`Area`, na.rm = TRUE),
`Hispanic or Latino %` = sum(`Hispanic or Latino % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`NH-White %` = sum(`NH-White % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`NH-Black %` = sum(`NH-Black % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`NH-American Native %` = sum(`NH-American Native % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`NH-Asian %` = sum(`NH-Asian % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`NH-Native Pacific Islander %` = sum(`NH-Native Pacific Islander % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`NH-Other Race %` = sum(`NH-Other Race % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`NH-Two or More Races %` = sum(`NH-Two or More Races % weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`% in Management, business, science, and arts` = sum(`% in Management, business, science, and arts weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`% in Service` = sum(`% in Service weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`% in Sales and Office` = sum(`% in Sales and Office weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`% in Resources and Construction` = sum(`% in Resources and Construction weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE),
`% in Transportation` = sum(`% in Transportation weighted`, na.rm = TRUE) / sum(`Total Pop`, na.rm = TRUE)
)
